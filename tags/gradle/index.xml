<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gradle on The Dev Haus</title>
    <link>https://thedevhaus.github.io/tags/gradle/</link>
    <description>Recent content in Gradle on The Dev Haus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Feb 2018 13:46:51 +1100</lastBuildDate>
    
	<atom:link href="https://thedevhaus.github.io/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Init Java Groovy Project Thru Gradle</title>
      <link>https://thedevhaus.github.io/post/init-java-groovy-project-thru-gradle/</link>
      <pubDate>Fri, 02 Feb 2018 13:46:51 +1100</pubDate>
      
      <guid>https://thedevhaus.github.io/post/init-java-groovy-project-thru-gradle/</guid>
      <description>Initialize a Java or Groovy project using gradle Gradle does not have full fledged support for generating skeleton project structure (maven archetype). Although there is some support available for some default java/scala/groovy and related libraries.
The gradle init plugin supports various basic formats for generating the project structure. For example:
Here&amp;rsquo;s an example:
# Create Java application directory structure gradle init --type java-application # This will generate basic project structure for a java command line application project with the standard defaults and will use JUnit as test framework.</description>
    </item>
    
  </channel>
</rss>