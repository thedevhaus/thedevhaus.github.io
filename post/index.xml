<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Dev Haus</title>
    <link>https://thedevhaus.github.io/post/</link>
    <description>Recent content in Posts on The Dev Haus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Feb 2018 15:28:19 +1100</lastBuildDate>
    
	<atom:link href="https://thedevhaus.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Search and Replace Bash</title>
      <link>https://thedevhaus.github.io/post/search-and-replace-bash/</link>
      <pubDate>Sat, 17 Feb 2018 15:28:19 +1100</pubDate>
      
      <guid>https://thedevhaus.github.io/post/search-and-replace-bash/</guid>
      <description> Search/replace string recursively in Linux grep -rnw ./*.* -e &amp;quot;string-to-search&amp;quot;  Replace all occurrences bash sed -i &#39;s/FROM/WITH/g&#39; filenamePattern  For e.g.
sed -i &#39;s/ash@gmail.com/someone@outloo.com/g&#39; *.txt  </description>
    </item>
    
    <item>
      <title>How to use Wiremock with HTTPS</title>
      <link>https://thedevhaus.github.io/post/my-first-post/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://thedevhaus.github.io/post/my-first-post/</guid>
      <description>Introduction Wiremock is an awesome HTTP stubbing library which can be used to mock end points. It is super simple and can be used as a standalone server. The beauty is that it can be used to stub SSL endpoints making it very versatile and easier to use.
Wiremock although ships with default keystore but it is issues to the creator. If you really want a full fledged SSL then it is a good idea to create the new keystore and use it.</description>
    </item>
    
    <item>
      <title>Init Java Groovy Project Thru Gradle</title>
      <link>https://thedevhaus.github.io/post/init-java-groovy-project-thru-gradle/</link>
      <pubDate>Fri, 02 Feb 2018 13:46:51 +1100</pubDate>
      
      <guid>https://thedevhaus.github.io/post/init-java-groovy-project-thru-gradle/</guid>
      <description>Initialize a Java or Groovy project using gradle Gradle does not have full fledged support for generating skeleton project structure (maven archetype). Although there is some support available for some default java/scala/groovy and related libraries.
The gradle init plugin supports various basic formats for generating the project structure. For example:
Here&amp;rsquo;s an example:
# Create Java application directory structure gradle init --type java-application # This will generate basic project structure for a java command line application project with the standard defaults and will use JUnit as test framework.</description>
    </item>
    
  </channel>
</rss>